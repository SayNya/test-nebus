"""empty message

Revision ID: 49c6e8e54bcf
Revises: c5217a48021d
Create Date: 2025-02-02 23:40:26.250340

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "49c6e8e54bcf"
down_revision: Union[str, None] = "c5217a48021d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "api_key",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(length=64), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_api_key_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_api_key")),
        sa.UniqueConstraint("key", name=op.f("uq_api_key_key")),
    )
    op.add_column(
        "user", sa.Column("password_hash", sa.String(length=255), nullable=False)
    )
    op.create_unique_constraint(op.f("uq_user_username"), "user", ["username"])
    op.drop_column("user", "password")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user", sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(op.f("uq_user_username"), "user", type_="unique")
    op.drop_column("user", "password_hash")
    op.drop_table("api_key")
    # ### end Alembic commands ###
